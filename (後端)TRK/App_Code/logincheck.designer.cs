#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="prjTRK")]
public partial class logincheckDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 擴充性方法定義
  partial void OnCreated();
  partial void InsertClassfication(Classfication instance);
  partial void UpdateClassfication(Classfication instance);
  partial void DeleteClassfication(Classfication instance);
  partial void InsertAccount(Account instance);
  partial void UpdateAccount(Account instance);
  partial void DeleteAccount(Account instance);
  partial void InsertCoupon(Coupon instance);
  partial void UpdateCoupon(Coupon instance);
  partial void DeleteCoupon(Coupon instance);
  partial void InsertCompany(Company instance);
  partial void UpdateCompany(Company instance);
  partial void DeleteCompany(Company instance);
  partial void InsertFacility(Facility instance);
  partial void UpdateFacility(Facility instance);
  partial void DeleteFacility(Facility instance);
  partial void InsertCounters(Counters instance);
  partial void UpdateCounters(Counters instance);
  partial void DeleteCounters(Counters instance);
  partial void InsertPromotions(Promotions instance);
  partial void UpdatePromotions(Promotions instance);
  partial void DeletePromotions(Promotions instance);
  #endregion
	
	public logincheckDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["prjTRKConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public logincheckDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public logincheckDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public logincheckDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public logincheckDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Classfication> Classfication
	{
		get
		{
			return this.GetTable<Classfication>();
		}
	}
	
	public System.Data.Linq.Table<Account> Account
	{
		get
		{
			return this.GetTable<Account>();
		}
	}
	
	public System.Data.Linq.Table<Coupon> Coupon
	{
		get
		{
			return this.GetTable<Coupon>();
		}
	}
	
	public System.Data.Linq.Table<Company> Company
	{
		get
		{
			return this.GetTable<Company>();
		}
	}
	
	public System.Data.Linq.Table<Facility> Facility
	{
		get
		{
			return this.GetTable<Facility>();
		}
	}
	
	public System.Data.Linq.Table<Counters> Counters
	{
		get
		{
			return this.GetTable<Counters>();
		}
	}
	
	public System.Data.Linq.Table<Promotions> Promotions
	{
		get
		{
			return this.GetTable<Promotions>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classfication")]
public partial class Classfication : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _classifyID;
	
	private string _item;
	
	private EntitySet<Promotions> _Promotions;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclassifyIDChanging(int value);
    partial void OnclassifyIDChanged();
    partial void OnitemChanging(string value);
    partial void OnitemChanged();
    #endregion
	
	public Classfication()
	{
		this._Promotions = new EntitySet<Promotions>(new Action<Promotions>(this.attach_Promotions), new Action<Promotions>(this.detach_Promotions));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classifyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int classifyID
	{
		get
		{
			return this._classifyID;
		}
		set
		{
			if ((this._classifyID != value))
			{
				this.OnclassifyIDChanging(value);
				this.SendPropertyChanging();
				this._classifyID = value;
				this.SendPropertyChanged("classifyID");
				this.OnclassifyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item", DbType="NVarChar(20)")]
	public string item
	{
		get
		{
			return this._item;
		}
		set
		{
			if ((this._item != value))
			{
				this.OnitemChanging(value);
				this.SendPropertyChanging();
				this._item = value;
				this.SendPropertyChanged("item");
				this.OnitemChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classfication_Promotions", Storage="_Promotions", ThisKey="classifyID", OtherKey="classifyID")]
	public EntitySet<Promotions> Promotions
	{
		get
		{
			return this._Promotions;
		}
		set
		{
			this._Promotions.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Promotions(Promotions entity)
	{
		this.SendPropertyChanging();
		entity.Classfication = this;
	}
	
	private void detach_Promotions(Promotions entity)
	{
		this.SendPropertyChanging();
		entity.Classfication = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _account1;
	
	private string _password;
	
	private System.Nullable<bool> _authority;
	
	private EntitySet<Company> _Company;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onaccount1Changing(string value);
    partial void Onaccount1Changed();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnauthorityChanging(System.Nullable<bool> value);
    partial void OnauthorityChanged();
    #endregion
	
	public Account()
	{
		this._Company = new EntitySet<Company>(new Action<Company>(this.attach_Company), new Action<Company>(this.detach_Company));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="account", Storage="_account1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string account1
	{
		get
		{
			return this._account1;
		}
		set
		{
			if ((this._account1 != value))
			{
				this.Onaccount1Changing(value);
				this.SendPropertyChanging();
				this._account1 = value;
				this.SendPropertyChanged("account1");
				this.Onaccount1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(20)")]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authority", DbType="Bit")]
	public System.Nullable<bool> authority
	{
		get
		{
			return this._authority;
		}
		set
		{
			if ((this._authority != value))
			{
				this.OnauthorityChanging(value);
				this.SendPropertyChanging();
				this._authority = value;
				this.SendPropertyChanged("authority");
				this.OnauthorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Company", Storage="_Company", ThisKey="account1", OtherKey="email")]
	public EntitySet<Company> Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			this._Company.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Company(Company entity)
	{
		this.SendPropertyChanging();
		entity.Account = this;
	}
	
	private void detach_Company(Company entity)
	{
		this.SendPropertyChanging();
		entity.Account = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coupon")]
public partial class Coupon : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _couponID;
	
	private string _title;
	
	private string _content;
	
	private string _qrCode;
	
	private System.Nullable<int> _facilityID;
	
	private System.Nullable<int> _counts;
	
	private EntityRef<Facility> _Facility;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncouponIDChanging(int value);
    partial void OncouponIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnqrCodeChanging(string value);
    partial void OnqrCodeChanged();
    partial void OnfacilityIDChanging(System.Nullable<int> value);
    partial void OnfacilityIDChanged();
    partial void OncountsChanging(System.Nullable<int> value);
    partial void OncountsChanged();
    #endregion
	
	public Coupon()
	{
		this._Facility = default(EntityRef<Facility>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_couponID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int couponID
	{
		get
		{
			return this._couponID;
		}
		set
		{
			if ((this._couponID != value))
			{
				this.OncouponIDChanging(value);
				this.SendPropertyChanging();
				this._couponID = value;
				this.SendPropertyChanged("couponID");
				this.OncouponIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
	public string content
	{
		get
		{
			return this._content;
		}
		set
		{
			if ((this._content != value))
			{
				this.OncontentChanging(value);
				this.SendPropertyChanging();
				this._content = value;
				this.SendPropertyChanged("content");
				this.OncontentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qrCode", DbType="NVarChar(MAX)")]
	public string qrCode
	{
		get
		{
			return this._qrCode;
		}
		set
		{
			if ((this._qrCode != value))
			{
				this.OnqrCodeChanging(value);
				this.SendPropertyChanging();
				this._qrCode = value;
				this.SendPropertyChanged("qrCode");
				this.OnqrCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facilityID", DbType="Int")]
	public System.Nullable<int> facilityID
	{
		get
		{
			return this._facilityID;
		}
		set
		{
			if ((this._facilityID != value))
			{
				if (this._Facility.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnfacilityIDChanging(value);
				this.SendPropertyChanging();
				this._facilityID = value;
				this.SendPropertyChanged("facilityID");
				this.OnfacilityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counts", DbType="Int")]
	public System.Nullable<int> counts
	{
		get
		{
			return this._counts;
		}
		set
		{
			if ((this._counts != value))
			{
				this.OncountsChanging(value);
				this.SendPropertyChanging();
				this._counts = value;
				this.SendPropertyChanged("counts");
				this.OncountsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facility_Coupon", Storage="_Facility", ThisKey="facilityID", OtherKey="facilityID", IsForeignKey=true)]
	public Facility Facility
	{
		get
		{
			return this._Facility.Entity;
		}
		set
		{
			Facility previousValue = this._Facility.Entity;
			if (((previousValue != value) 
						|| (this._Facility.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Facility.Entity = null;
					previousValue.Coupon.Remove(this);
				}
				this._Facility.Entity = value;
				if ((value != null))
				{
					value.Coupon.Add(this);
					this._facilityID = value.facilityID;
				}
				else
				{
					this._facilityID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Facility");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _companyID;
	
	private string _name;
	
	private string _manager;
	
	private string _tel;
	
	private string _email;
	
	private string _sparEmail;
	
	private string _addr;
	
	private string _content;
	
	private string _picBrandPath;
	
	private string _pic360ViewPath;
	
	private System.Nullable<int> _facilityID;
	
	private EntitySet<Counters> _Counters;
	
	private EntitySet<Promotions> _Promotions;
	
	private EntityRef<Account> _Account;
	
	private EntityRef<Facility> _Facility;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncompanyIDChanging(string value);
    partial void OncompanyIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmanagerChanging(string value);
    partial void OnmanagerChanged();
    partial void OntelChanging(string value);
    partial void OntelChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnsparEmailChanging(string value);
    partial void OnsparEmailChanged();
    partial void OnaddrChanging(string value);
    partial void OnaddrChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnpicBrandPathChanging(string value);
    partial void OnpicBrandPathChanged();
    partial void Onpic360ViewPathChanging(string value);
    partial void Onpic360ViewPathChanged();
    partial void OnfacilityIDChanging(System.Nullable<int> value);
    partial void OnfacilityIDChanged();
    #endregion
	
	public Company()
	{
		this._Counters = new EntitySet<Counters>(new Action<Counters>(this.attach_Counters), new Action<Counters>(this.detach_Counters));
		this._Promotions = new EntitySet<Promotions>(new Action<Promotions>(this.attach_Promotions), new Action<Promotions>(this.detach_Promotions));
		this._Account = default(EntityRef<Account>);
		this._Facility = default(EntityRef<Facility>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string companyID
	{
		get
		{
			return this._companyID;
		}
		set
		{
			if ((this._companyID != value))
			{
				this.OncompanyIDChanging(value);
				this.SendPropertyChanging();
				this._companyID = value;
				this.SendPropertyChanged("companyID");
				this.OncompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager", DbType="NVarChar(20)")]
	public string manager
	{
		get
		{
			return this._manager;
		}
		set
		{
			if ((this._manager != value))
			{
				this.OnmanagerChanging(value);
				this.SendPropertyChanging();
				this._manager = value;
				this.SendPropertyChanged("manager");
				this.OnmanagerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="NVarChar(20)")]
	public string tel
	{
		get
		{
			return this._tel;
		}
		set
		{
			if ((this._tel != value))
			{
				this.OntelChanging(value);
				this.SendPropertyChanging();
				this._tel = value;
				this.SendPropertyChanged("tel");
				this.OntelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				if (this._Account.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sparEmail", DbType="NVarChar(50)")]
	public string sparEmail
	{
		get
		{
			return this._sparEmail;
		}
		set
		{
			if ((this._sparEmail != value))
			{
				this.OnsparEmailChanging(value);
				this.SendPropertyChanging();
				this._sparEmail = value;
				this.SendPropertyChanged("sparEmail");
				this.OnsparEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addr", DbType="NVarChar(100)")]
	public string addr
	{
		get
		{
			return this._addr;
		}
		set
		{
			if ((this._addr != value))
			{
				this.OnaddrChanging(value);
				this.SendPropertyChanging();
				this._addr = value;
				this.SendPropertyChanged("addr");
				this.OnaddrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
	public string content
	{
		get
		{
			return this._content;
		}
		set
		{
			if ((this._content != value))
			{
				this.OncontentChanging(value);
				this.SendPropertyChanging();
				this._content = value;
				this.SendPropertyChanged("content");
				this.OncontentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picBrandPath", DbType="NVarChar(50)")]
	public string picBrandPath
	{
		get
		{
			return this._picBrandPath;
		}
		set
		{
			if ((this._picBrandPath != value))
			{
				this.OnpicBrandPathChanging(value);
				this.SendPropertyChanging();
				this._picBrandPath = value;
				this.SendPropertyChanged("picBrandPath");
				this.OnpicBrandPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic360ViewPath", DbType="NVarChar(50)")]
	public string pic360ViewPath
	{
		get
		{
			return this._pic360ViewPath;
		}
		set
		{
			if ((this._pic360ViewPath != value))
			{
				this.Onpic360ViewPathChanging(value);
				this.SendPropertyChanging();
				this._pic360ViewPath = value;
				this.SendPropertyChanged("pic360ViewPath");
				this.Onpic360ViewPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facilityID", DbType="Int")]
	public System.Nullable<int> facilityID
	{
		get
		{
			return this._facilityID;
		}
		set
		{
			if ((this._facilityID != value))
			{
				if (this._Facility.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnfacilityIDChanging(value);
				this.SendPropertyChanging();
				this._facilityID = value;
				this.SendPropertyChanged("facilityID");
				this.OnfacilityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Counters", Storage="_Counters", ThisKey="companyID", OtherKey="companyID")]
	public EntitySet<Counters> Counters
	{
		get
		{
			return this._Counters;
		}
		set
		{
			this._Counters.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Promotions", Storage="_Promotions", ThisKey="companyID", OtherKey="companyID")]
	public EntitySet<Promotions> Promotions
	{
		get
		{
			return this._Promotions;
		}
		set
		{
			this._Promotions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Company", Storage="_Account", ThisKey="email", OtherKey="account1", IsForeignKey=true)]
	public Account Account
	{
		get
		{
			return this._Account.Entity;
		}
		set
		{
			Account previousValue = this._Account.Entity;
			if (((previousValue != value) 
						|| (this._Account.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Account.Entity = null;
					previousValue.Company.Remove(this);
				}
				this._Account.Entity = value;
				if ((value != null))
				{
					value.Company.Add(this);
					this._email = value.account1;
				}
				else
				{
					this._email = default(string);
				}
				this.SendPropertyChanged("Account");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facility_Company", Storage="_Facility", ThisKey="facilityID", OtherKey="facilityID", IsForeignKey=true)]
	public Facility Facility
	{
		get
		{
			return this._Facility.Entity;
		}
		set
		{
			Facility previousValue = this._Facility.Entity;
			if (((previousValue != value) 
						|| (this._Facility.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Facility.Entity = null;
					previousValue.Company.Remove(this);
				}
				this._Facility.Entity = value;
				if ((value != null))
				{
					value.Company.Add(this);
					this._facilityID = value.facilityID;
				}
				else
				{
					this._facilityID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Facility");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Counters(Counters entity)
	{
		this.SendPropertyChanging();
		entity.Company = this;
	}
	
	private void detach_Counters(Counters entity)
	{
		this.SendPropertyChanging();
		entity.Company = null;
	}
	
	private void attach_Promotions(Promotions entity)
	{
		this.SendPropertyChanging();
		entity.Company = this;
	}
	
	private void detach_Promotions(Promotions entity)
	{
		this.SendPropertyChanging();
		entity.Company = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Facility")]
public partial class Facility : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _facilityID;
	
	private string _name;
	
	private string _content;
	
	private string _pic;
	
	private EntitySet<Coupon> _Coupon;
	
	private EntitySet<Company> _Company;
	
	private EntitySet<Counters> _Counters;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfacilityIDChanging(int value);
    partial void OnfacilityIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnpicChanging(string value);
    partial void OnpicChanged();
    #endregion
	
	public Facility()
	{
		this._Coupon = new EntitySet<Coupon>(new Action<Coupon>(this.attach_Coupon), new Action<Coupon>(this.detach_Coupon));
		this._Company = new EntitySet<Company>(new Action<Company>(this.attach_Company), new Action<Company>(this.detach_Company));
		this._Counters = new EntitySet<Counters>(new Action<Counters>(this.attach_Counters), new Action<Counters>(this.detach_Counters));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facilityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int facilityID
	{
		get
		{
			return this._facilityID;
		}
		set
		{
			if ((this._facilityID != value))
			{
				this.OnfacilityIDChanging(value);
				this.SendPropertyChanging();
				this._facilityID = value;
				this.SendPropertyChanged("facilityID");
				this.OnfacilityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
	public string content
	{
		get
		{
			return this._content;
		}
		set
		{
			if ((this._content != value))
			{
				this.OncontentChanging(value);
				this.SendPropertyChanging();
				this._content = value;
				this.SendPropertyChanged("content");
				this.OncontentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic", DbType="NVarChar(50)")]
	public string pic
	{
		get
		{
			return this._pic;
		}
		set
		{
			if ((this._pic != value))
			{
				this.OnpicChanging(value);
				this.SendPropertyChanging();
				this._pic = value;
				this.SendPropertyChanged("pic");
				this.OnpicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facility_Coupon", Storage="_Coupon", ThisKey="facilityID", OtherKey="facilityID")]
	public EntitySet<Coupon> Coupon
	{
		get
		{
			return this._Coupon;
		}
		set
		{
			this._Coupon.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facility_Company", Storage="_Company", ThisKey="facilityID", OtherKey="facilityID")]
	public EntitySet<Company> Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			this._Company.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facility_Counters", Storage="_Counters", ThisKey="facilityID", OtherKey="facilityID")]
	public EntitySet<Counters> Counters
	{
		get
		{
			return this._Counters;
		}
		set
		{
			this._Counters.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Coupon(Coupon entity)
	{
		this.SendPropertyChanging();
		entity.Facility = this;
	}
	
	private void detach_Coupon(Coupon entity)
	{
		this.SendPropertyChanging();
		entity.Facility = null;
	}
	
	private void attach_Company(Company entity)
	{
		this.SendPropertyChanging();
		entity.Facility = this;
	}
	
	private void detach_Company(Company entity)
	{
		this.SendPropertyChanging();
		entity.Facility = null;
	}
	
	private void attach_Counters(Counters entity)
	{
		this.SendPropertyChanging();
		entity.Facility = this;
	}
	
	private void detach_Counters(Counters entity)
	{
		this.SendPropertyChanging();
		entity.Facility = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Counters")]
public partial class Counters : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _building;
	
	private int _layer;
	
	private int _counterNum;
	
	private string _companyID;
	
	private string _picLocation;
	
	private System.Nullable<bool> _available;
	
	private System.Nullable<int> _facilityID;
	
	private EntityRef<Company> _Company;
	
	private EntityRef<Facility> _Facility;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbuildingChanging(string value);
    partial void OnbuildingChanged();
    partial void OnlayerChanging(int value);
    partial void OnlayerChanged();
    partial void OncounterNumChanging(int value);
    partial void OncounterNumChanged();
    partial void OncompanyIDChanging(string value);
    partial void OncompanyIDChanged();
    partial void OnpicLocationChanging(string value);
    partial void OnpicLocationChanged();
    partial void OnavailableChanging(System.Nullable<bool> value);
    partial void OnavailableChanged();
    partial void OnfacilityIDChanging(System.Nullable<int> value);
    partial void OnfacilityIDChanged();
    #endregion
	
	public Counters()
	{
		this._Company = default(EntityRef<Company>);
		this._Facility = default(EntityRef<Facility>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_building", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string building
	{
		get
		{
			return this._building;
		}
		set
		{
			if ((this._building != value))
			{
				this.OnbuildingChanging(value);
				this.SendPropertyChanging();
				this._building = value;
				this.SendPropertyChanged("building");
				this.OnbuildingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_layer", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int layer
	{
		get
		{
			return this._layer;
		}
		set
		{
			if ((this._layer != value))
			{
				this.OnlayerChanging(value);
				this.SendPropertyChanging();
				this._layer = value;
				this.SendPropertyChanged("layer");
				this.OnlayerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_counterNum", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int counterNum
	{
		get
		{
			return this._counterNum;
		}
		set
		{
			if ((this._counterNum != value))
			{
				this.OncounterNumChanging(value);
				this.SendPropertyChanging();
				this._counterNum = value;
				this.SendPropertyChanged("counterNum");
				this.OncounterNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyID", DbType="NVarChar(20)")]
	public string companyID
	{
		get
		{
			return this._companyID;
		}
		set
		{
			if ((this._companyID != value))
			{
				if (this._Company.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OncompanyIDChanging(value);
				this.SendPropertyChanging();
				this._companyID = value;
				this.SendPropertyChanged("companyID");
				this.OncompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picLocation", DbType="NVarChar(50)")]
	public string picLocation
	{
		get
		{
			return this._picLocation;
		}
		set
		{
			if ((this._picLocation != value))
			{
				this.OnpicLocationChanging(value);
				this.SendPropertyChanging();
				this._picLocation = value;
				this.SendPropertyChanged("picLocation");
				this.OnpicLocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_available", DbType="Bit")]
	public System.Nullable<bool> available
	{
		get
		{
			return this._available;
		}
		set
		{
			if ((this._available != value))
			{
				this.OnavailableChanging(value);
				this.SendPropertyChanging();
				this._available = value;
				this.SendPropertyChanged("available");
				this.OnavailableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_facilityID", DbType="Int")]
	public System.Nullable<int> facilityID
	{
		get
		{
			return this._facilityID;
		}
		set
		{
			if ((this._facilityID != value))
			{
				if (this._Facility.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnfacilityIDChanging(value);
				this.SendPropertyChanging();
				this._facilityID = value;
				this.SendPropertyChanged("facilityID");
				this.OnfacilityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Counters", Storage="_Company", ThisKey="companyID", OtherKey="companyID", IsForeignKey=true)]
	public Company Company
	{
		get
		{
			return this._Company.Entity;
		}
		set
		{
			Company previousValue = this._Company.Entity;
			if (((previousValue != value) 
						|| (this._Company.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Company.Entity = null;
					previousValue.Counters.Remove(this);
				}
				this._Company.Entity = value;
				if ((value != null))
				{
					value.Counters.Add(this);
					this._companyID = value.companyID;
				}
				else
				{
					this._companyID = default(string);
				}
				this.SendPropertyChanged("Company");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facility_Counters", Storage="_Facility", ThisKey="facilityID", OtherKey="facilityID", IsForeignKey=true)]
	public Facility Facility
	{
		get
		{
			return this._Facility.Entity;
		}
		set
		{
			Facility previousValue = this._Facility.Entity;
			if (((previousValue != value) 
						|| (this._Facility.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Facility.Entity = null;
					previousValue.Counters.Remove(this);
				}
				this._Facility.Entity = value;
				if ((value != null))
				{
					value.Counters.Add(this);
					this._facilityID = value.facilityID;
				}
				else
				{
					this._facilityID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Facility");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promotions")]
public partial class Promotions : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _activityID;
	
	private string _companyID;
	
	private string _title;
	
	private System.Nullable<int> _classifyID;
	
	private string _content;
	
	private string _picPath;
	
	private System.Nullable<System.DateTime> _startDate;
	
	private System.Nullable<System.DateTime> _endDate;
	
	private System.Nullable<int> _statusID;
	
	private string _comment;
	
	private System.Nullable<System.DateTime> _onShelfDate;
	
	private EntityRef<Classfication> _Classfication;
	
	private EntityRef<Company> _Company;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnactivityIDChanging(int value);
    partial void OnactivityIDChanged();
    partial void OncompanyIDChanging(string value);
    partial void OncompanyIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnclassifyIDChanging(System.Nullable<int> value);
    partial void OnclassifyIDChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnpicPathChanging(string value);
    partial void OnpicPathChanged();
    partial void OnstartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnstartDateChanged();
    partial void OnendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnendDateChanged();
    partial void OnstatusIDChanging(System.Nullable<int> value);
    partial void OnstatusIDChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnonShelfDateChanging(System.Nullable<System.DateTime> value);
    partial void OnonShelfDateChanged();
    #endregion
	
	public Promotions()
	{
		this._Classfication = default(EntityRef<Classfication>);
		this._Company = default(EntityRef<Company>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int activityID
	{
		get
		{
			return this._activityID;
		}
		set
		{
			if ((this._activityID != value))
			{
				this.OnactivityIDChanging(value);
				this.SendPropertyChanging();
				this._activityID = value;
				this.SendPropertyChanged("activityID");
				this.OnactivityIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string companyID
	{
		get
		{
			return this._companyID;
		}
		set
		{
			if ((this._companyID != value))
			{
				if (this._Company.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OncompanyIDChanging(value);
				this.SendPropertyChanging();
				this._companyID = value;
				this.SendPropertyChanged("companyID");
				this.OncompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX)")]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classifyID", DbType="Int")]
	public System.Nullable<int> classifyID
	{
		get
		{
			return this._classifyID;
		}
		set
		{
			if ((this._classifyID != value))
			{
				if (this._Classfication.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnclassifyIDChanging(value);
				this.SendPropertyChanging();
				this._classifyID = value;
				this.SendPropertyChanged("classifyID");
				this.OnclassifyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
	public string content
	{
		get
		{
			return this._content;
		}
		set
		{
			if ((this._content != value))
			{
				this.OncontentChanging(value);
				this.SendPropertyChanging();
				this._content = value;
				this.SendPropertyChanged("content");
				this.OncontentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picPath", DbType="NVarChar(50)")]
	public string picPath
	{
		get
		{
			return this._picPath;
		}
		set
		{
			if ((this._picPath != value))
			{
				this.OnpicPathChanging(value);
				this.SendPropertyChanging();
				this._picPath = value;
				this.SendPropertyChanged("picPath");
				this.OnpicPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> startDate
	{
		get
		{
			return this._startDate;
		}
		set
		{
			if ((this._startDate != value))
			{
				this.OnstartDateChanging(value);
				this.SendPropertyChanging();
				this._startDate = value;
				this.SendPropertyChanged("startDate");
				this.OnstartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> endDate
	{
		get
		{
			return this._endDate;
		}
		set
		{
			if ((this._endDate != value))
			{
				this.OnendDateChanging(value);
				this.SendPropertyChanging();
				this._endDate = value;
				this.SendPropertyChanged("endDate");
				this.OnendDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusID", DbType="Int")]
	public System.Nullable<int> statusID
	{
		get
		{
			return this._statusID;
		}
		set
		{
			if ((this._statusID != value))
			{
				this.OnstatusIDChanging(value);
				this.SendPropertyChanging();
				this._statusID = value;
				this.SendPropertyChanged("statusID");
				this.OnstatusIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(50)")]
	public string comment
	{
		get
		{
			return this._comment;
		}
		set
		{
			if ((this._comment != value))
			{
				this.OncommentChanging(value);
				this.SendPropertyChanging();
				this._comment = value;
				this.SendPropertyChanged("comment");
				this.OncommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_onShelfDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> onShelfDate
	{
		get
		{
			return this._onShelfDate;
		}
		set
		{
			if ((this._onShelfDate != value))
			{
				this.OnonShelfDateChanging(value);
				this.SendPropertyChanging();
				this._onShelfDate = value;
				this.SendPropertyChanged("onShelfDate");
				this.OnonShelfDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Classfication_Promotions", Storage="_Classfication", ThisKey="classifyID", OtherKey="classifyID", IsForeignKey=true)]
	public Classfication Classfication
	{
		get
		{
			return this._Classfication.Entity;
		}
		set
		{
			Classfication previousValue = this._Classfication.Entity;
			if (((previousValue != value) 
						|| (this._Classfication.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Classfication.Entity = null;
					previousValue.Promotions.Remove(this);
				}
				this._Classfication.Entity = value;
				if ((value != null))
				{
					value.Promotions.Add(this);
					this._classifyID = value.classifyID;
				}
				else
				{
					this._classifyID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Classfication");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Promotions", Storage="_Company", ThisKey="companyID", OtherKey="companyID", IsForeignKey=true)]
	public Company Company
	{
		get
		{
			return this._Company.Entity;
		}
		set
		{
			Company previousValue = this._Company.Entity;
			if (((previousValue != value) 
						|| (this._Company.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Company.Entity = null;
					previousValue.Promotions.Remove(this);
				}
				this._Company.Entity = value;
				if ((value != null))
				{
					value.Promotions.Add(this);
					this._companyID = value.companyID;
				}
				else
				{
					this._companyID = default(string);
				}
				this.SendPropertyChanged("Company");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
